{
  "name": "PDV Vendas - Integração MCP WooCommerce",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "pdv-vendas/mcp/produto",
        "options": {
          "responseMode": "lastNode"
        }
      },
      "id": "1a1a1a1a-1a1a-1a1a-1a1a-1a1a1a1a1a1a",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Processar dados do produto\nconst data = $input.json;\n\n// Verificar se temos os dados necessários\nif (!data.nome) {\n  return { success: false, message: \"Nome do produto não fornecido\" };\n}\n\n// Preparar dados para o MCP\nreturn {\n  product: {\n    name: data.nome,\n    type: \"simple\",\n    regular_price: data.preco ? data.preco.toString() : \"0\",\n    description: data.descricao || \"\",\n    short_description: data.descricao_curta || \"\",\n    categories: data.categorias ? data.categorias.map(cat => ({id: cat.id})) : [],\n    images: data.imagens ? data.imagens.map(img => ({\n      src: img.url,\n      name: img.nome || `Imagem ${data.nome}`,\n      alt: img.alt || `Imagem ${data.nome}`\n    })) : [],\n    sku: data.codigo || \"\",\n    stock_quantity: data.estoque || 0,\n    manage_stock: true,\n    status: \"publish\",\n    meta_data: [\n      {\n        key: \"_pdv_vendas_product\",\n        value: \"true\"\n      },\n      {\n        key: \"_pdv_vendas_id\",\n        value: data.id ? data.id.toString() : \"\"\n      }\n    ]\n  },\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "2b2b2b2b-2b2b-2b2b-2b2b-2b2b2b2b2b2b",
      "name": "Prepare Product Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        450,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:3025/api/woocommerce/products/upsert",
        "method": "POST",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "product",
              "value": "={{ $json.product }}"
            },
            {
              "name": "lookup_field",
              "value": "sku"
            },
            {
              "name": "lookup_value",
              "value": "={{ $json.product.sku }}"
            }
          ]
        }
      },
      "id": "3c3c3c3c-3c3c-3c3c-3c3c-3c3c3c3c3c3c",
      "name": "MCP WooCommerce API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        650,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Processar resposta do MCP\nconst data = $input.json;\n\n// Verificar se temos os dados necessários\nif (!data.id) {\n  return { success: false, message: \"Produto não criado/atualizado no WooCommerce\" };\n}\n\nreturn {\n  success: true,\n  message: `Produto ${data.name} sincronizado com sucesso para o WooCommerce (ID: ${data.id})`,\n  woocommerce_id: data.id,\n  woocommerce_sku: data.sku,\n  woocommerce_url: data.permalink,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "4d4d4d4d-4d4d-4d4d-4d4d-4d4d4d4d4d4d",
      "name": "Process Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        850,
        300
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Prepare Product Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Product Data": {
      "main": [
        [
          {
            "node": "MCP WooCommerce API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP WooCommerce API": {
      "main": [
        [
          {
            "node": "Process Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p",
  "id": "6",
  "meta": {
    "instanceId": "1a2b3c4d5e6f7g8h9i0j"
  },
  "tags": []
}
